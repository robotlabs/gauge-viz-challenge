// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Gauge
    data={
      Object {
        "format": "currency",
        "max": 200,
        "min": 0,
        "unit": "GBP",
        "value": 34,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Gauge {
      "_reactInternalFiber": FiberNode {
        "_debugID": 55,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 54,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 111,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="gauge"
              >
                <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 13,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "data": Object {
                            "format": "currency",
                            "max": 200,
                            "min": 0,
                            "unit": "GBP",
                            "value": 34,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "data": Object {
                            "format": "currency",
                            "max": 200,
                            "min": 0,
                            "unit": "GBP",
                            "value": 34,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 111,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "data": Object {
                      "format": "currency",
                      "max": 200,
                      "min": 0,
                      "unit": "GBP",
                      "value": 34,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 13,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "data": Object {
                        "format": "currency",
                        "max": 200,
                        "min": 0,
                        "unit": "GBP",
                        "value": 34,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 56,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
            "lineNumber": 111,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "children": <svg
              className="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            />,
            "className": "gauge",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <svg
              className="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            />,
            "className": "gauge",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="gauge"
          >
            <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": FiberNode {
          "_debugID": 57,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
            "lineNumber": 113,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "effectTag": 128,
          "elementType": "svg",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "className": "svg-container",
            "preserveAspectRatio": "xMidYMid",
            "viewBox": "0 0 200 100",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "className": "svg-container",
            "preserveAspectRatio": "xMidYMid",
            "viewBox": "0 0 200 100",
          },
          "ref": Object {
            "current": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
          },
          "return": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 111,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="gauge"
            >
              <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <svg
            class="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          >
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>
          </svg>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "svg",
          "updateQueue": null,
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugID": 57,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
            "lineNumber": 113,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "effectTag": 128,
          "elementType": "svg",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "className": "svg-container",
            "preserveAspectRatio": "xMidYMid",
            "viewBox": "0 0 200 100",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "className": "svg-container",
            "preserveAspectRatio": "xMidYMid",
            "viewBox": "0 0 200 100",
          },
          "ref": Object {
            "current": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
          },
          "return": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 111,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="gauge"
            >
              <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <svg
            class="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          >
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>
          </svg>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "svg",
          "updateQueue": null,
        },
        "memoizedProps": Object {
          "data": Object {
            "format": "currency",
            "max": 200,
            "min": 0,
            "unit": "GBP",
            "value": 34,
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "data": Object {
            "format": "currency",
            "max": 200,
            "min": 0,
            "unit": "GBP",
            "value": 34,
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 54,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 111,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="gauge"
              >
                <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "data": Object {
                "format": "currency",
                "max": 200,
                "min": 0,
                "unit": "GBP",
                "value": 34,
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 13,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "data": Object {
                            "format": "currency",
                            "max": 200,
                            "min": 0,
                            "unit": "GBP",
                            "value": 34,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "data": Object {
                            "format": "currency",
                            "max": 200,
                            "min": 0,
                            "unit": "GBP",
                            "value": 34,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 111,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "data": Object {
                      "format": "currency",
                      "max": 200,
                      "min": 0,
                      "unit": "GBP",
                      "value": 34,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 13,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "data": Object {
                        "format": "currency",
                        "max": 200,
                        "min": 0,
                        "unit": "GBP",
                        "value": 34,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "arc": [Function],
      "context": Object {},
      "copyError": Selection {
        "_groups": Array [
          Array [
            <text
              font-family="sans-serif"
              font-size="6px"
              style="fill: black; opacity: 1;"
              x="0"
              y="15"
            />,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "copyMax": Selection {
        "_groups": Array [
          Array [
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="80"
              y="10"
            />,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "copyMin": Selection {
        "_groups": Array [
          Array [
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="-80"
              y="10"
            />,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "copyValue": Selection {
        "_groups": Array [
          Array [
            <text
              font-family="sans-serif"
              font-size="11px"
              style="fill: black; opacity: 1;"
              x="0"
              y="-5"
            />,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "onUpdateTransition": [Function],
      "percentageArc": Selection {
        "_groups": Array [
          Array [
            <path
              d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
              style="fill: #ff0099;"
            />,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "props": Object {
        "data": Object {
          "format": "currency",
          "max": 200,
          "min": 0,
          "unit": "GBP",
          "value": 34,
        },
      },
      "refs": Object {},
      "state": null,
      "svg": Selection {
        "_groups": Array [
          Array [
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>,
          ],
        ],
        "_parents": Array [
          null,
        ],
      },
      "svgD": Object {
        "current": <svg
          class="svg-container"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 200 100"
        >
          <g
            transform="translate(100,80)"
          >
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="-80"
              y="10"
            />
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="80"
              y="10"
            />
            <text
              font-family="sans-serif"
              font-size="11px"
              style="fill: black; opacity: 1;"
              x="0"
              y="-5"
            />
            <text
              font-family="sans-serif"
              font-size="6px"
              style="fill: black; opacity: 1;"
              x="0"
              y="15"
            />
            <path
              d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
              style="fill: #ddd;"
            />
            <path
              d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
              style="fill: #ff0099;"
            />
          </g>
        </svg>,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
      "valueOld": 0,
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "data": Object {
        "format": "currency",
        "max": 200,
        "min": 0,
        "unit": "GBP",
        "value": 34,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="gauge"
      >
        <svg
          class="svg-container"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 200 100"
        >
          <g
            transform="translate(100,80)"
          >
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="-80"
              y="10"
            />
            <text
              font-family="sans-serif"
              font-size="8px"
              style="fill: black; opacity: 1;"
              x="80"
              y="10"
            />
            <text
              font-family="sans-serif"
              font-size="11px"
              style="fill: black; opacity: 1;"
              x="0"
              y="-5"
            />
            <text
              font-family="sans-serif"
              font-size="6px"
              style="fill: black; opacity: 1;"
              x="0"
              y="15"
            />
            <path
              d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
              style="fill: #ddd;"
            />
            <path
              d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
              style="fill: #ff0099;"
            />
          </g>
        </svg>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <svg
          className="svg-container"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 200 100"
        />,
        "className": "gauge",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <svg
            class="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          >
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>
          </svg>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "svg-container",
            "preserveAspectRatio": "xMidYMid",
            "viewBox": "0 0 200 100",
          },
          "ref": Object {
            "current": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
          },
          "rendered": Array [
            undefined,
          ],
          "type": "svg",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Gauge {
        "_reactInternalFiber": FiberNode {
          "_debugID": 55,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 54,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 111,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="gauge"
                    >
                      <svg
                        class="svg-container"
                        preserveAspectRatio="xMidYMid"
                        viewBox="0 0 200 100"
                      >
                        <g
                          transform="translate(100,80)"
                        >
                          <text
                            font-family="sans-serif"
                            font-size="8px"
                            style="fill: black; opacity: 1;"
                            x="-80"
                            y="10"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="8px"
                            style="fill: black; opacity: 1;"
                            x="80"
                            y="10"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="11px"
                            style="fill: black; opacity: 1;"
                            x="0"
                            y="-5"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="6px"
                            style="fill: black; opacity: 1;"
                            x="0"
                            y="15"
                          />
                          <path
                            d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                            style="fill: #ddd;"
                          />
                          <path
                            d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                            style="fill: #ff0099;"
                          />
                        </g>
                      </svg>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 13,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "data": Object {
                              "format": "currency",
                              "max": 200,
                              "min": 0,
                              "unit": "GBP",
                              "value": 34,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "data": Object {
                              "format": "currency",
                              "max": 200,
                              "min": 0,
                              "unit": "GBP",
                              "value": 34,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 57,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 113,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 128,
                "elementType": "svg",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "svg-container",
                  "preserveAspectRatio": "xMidYMid",
                  "viewBox": "0 0 200 100",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "svg-container",
                  "preserveAspectRatio": "xMidYMid",
                  "viewBox": "0 0 200 100",
                },
                "ref": Object {
                  "current": <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>,
                },
                "return": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                    "lineNumber": 111,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <svg
                      className="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    />,
                    "className": "gauge",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <svg
                      className="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    />,
                    "className": "gauge",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "svg",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "data": Object {
                        "format": "currency",
                        "max": 200,
                        "min": 0,
                        "unit": "GBP",
                        "value": 34,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 13,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "data": Object {
                          "format": "currency",
                          "max": 200,
                          "min": 0,
                          "unit": "GBP",
                          "value": 34,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "data": Object {
                    "format": "currency",
                    "max": 200,
                    "min": 0,
                    "unit": "GBP",
                    "value": 34,
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "data": Object {
                    "format": "currency",
                    "max": 200,
                    "min": 0,
                    "unit": "GBP",
                    "value": 34,
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 111,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "memoizedProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <svg
                className="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              />,
              "className": "gauge",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="gauge"
            >
              <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 111,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="gauge"
              >
                <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugID": 57,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
              "lineNumber": 113,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 128,
            "elementType": "svg",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 111,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <svg
                  className="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                />,
                "className": "gauge",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="gauge"
              >
                <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "svg",
            "updateQueue": null,
          },
          "memoizedProps": Object {
            "data": Object {
              "format": "currency",
              "max": 200,
              "min": 0,
              "unit": "GBP",
              "value": 34,
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "data": Object {
              "format": "currency",
              "max": 200,
              "min": 0,
              "unit": "GBP",
              "value": 34,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 54,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": FiberNode {
              "_debugID": 57,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                "lineNumber": 113,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 128,
              "elementType": "svg",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "svg-container",
                "preserveAspectRatio": "xMidYMid",
                "viewBox": "0 0 200 100",
              },
              "ref": Object {
                "current": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
              },
              "return": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 111,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <svg
                    className="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  />,
                  "className": "gauge",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="gauge"
                >
                  <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "svg",
              "updateQueue": null,
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "data": Object {
                  "format": "currency",
                  "max": 200,
                  "min": 0,
                  "unit": "GBP",
                  "value": 34,
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="gauge"
                    >
                      <svg
                        class="svg-container"
                        preserveAspectRatio="xMidYMid"
                        viewBox="0 0 200 100"
                      >
                        <g
                          transform="translate(100,80)"
                        >
                          <text
                            font-family="sans-serif"
                            font-size="8px"
                            style="fill: black; opacity: 1;"
                            x="-80"
                            y="10"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="8px"
                            style="fill: black; opacity: 1;"
                            x="80"
                            y="10"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="11px"
                            style="fill: black; opacity: 1;"
                            x="0"
                            y="-5"
                          />
                          <text
                            font-family="sans-serif"
                            font-size="6px"
                            style="fill: black; opacity: 1;"
                            x="0"
                            y="15"
                          />
                          <path
                            d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                            style="fill: #ddd;"
                          />
                          <path
                            d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                            style="fill: #ff0099;"
                          />
                        </g>
                      </svg>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 13,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "data": Object {
                              "format": "currency",
                              "max": 200,
                              "min": 0,
                              "unit": "GBP",
                              "value": 34,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "data": Object {
                              "format": "currency",
                              "max": 200,
                              "min": 0,
                              "unit": "GBP",
                              "value": 34,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": FiberNode {
                "_debugID": 57,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                  "lineNumber": 113,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 128,
                "elementType": "svg",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": "svg-container",
                  "preserveAspectRatio": "xMidYMid",
                  "viewBox": "0 0 200 100",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": "svg-container",
                  "preserveAspectRatio": "xMidYMid",
                  "viewBox": "0 0 200 100",
                },
                "ref": Object {
                  "current": <svg
                    class="svg-container"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 200 100"
                  >
                    <g
                      transform="translate(100,80)"
                    >
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="-80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="8px"
                        style="fill: black; opacity: 1;"
                        x="80"
                        y="10"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="11px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="-5"
                      />
                      <text
                        font-family="sans-serif"
                        font-size="6px"
                        style="fill: black; opacity: 1;"
                        x="0"
                        y="15"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ddd;"
                      />
                      <path
                        d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                        style="fill: #ff0099;"
                      />
                    </g>
                  </svg>,
                },
                "return": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/otlabs/io/git/robotlabs-git/gauge-viz-challenge/src/app/gauge/gauge.js",
                    "lineNumber": 111,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <svg
                      className="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    />,
                    "className": "gauge",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <svg
                      className="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    />,
                    "className": "gauge",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <svg
                  class="svg-container"
                  preserveAspectRatio="xMidYMid"
                  viewBox="0 0 200 100"
                >
                  <g
                    transform="translate(100,80)"
                  >
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="-80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="8px"
                      style="fill: black; opacity: 1;"
                      x="80"
                      y="10"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="11px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="-5"
                    />
                    <text
                      font-family="sans-serif"
                      font-size="6px"
                      style="fill: black; opacity: 1;"
                      x="0"
                      y="15"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ddd;"
                    />
                    <path
                      d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                      style="fill: #ff0099;"
                    />
                  </g>
                </svg>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "svg",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "data": Object {
                        "format": "currency",
                        "max": 200,
                        "min": 0,
                        "unit": "GBP",
                        "value": 34,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="gauge"
                  >
                    <svg
                      class="svg-container"
                      preserveAspectRatio="xMidYMid"
                      viewBox="0 0 200 100"
                    >
                      <g
                        transform="translate(100,80)"
                      >
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="-80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="8px"
                          style="fill: black; opacity: 1;"
                          x="80"
                          y="10"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="11px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="-5"
                        />
                        <text
                          font-family="sans-serif"
                          font-size="6px"
                          style="fill: black; opacity: 1;"
                          x="0"
                          y="15"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ddd;"
                        />
                        <path
                          d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                          style="fill: #ff0099;"
                        />
                      </g>
                    </svg>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 13,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "data": Object {
                          "format": "currency",
                          "max": 200,
                          "min": 0,
                          "unit": "GBP",
                          "value": 34,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "data": Object {
                    "format": "currency",
                    "max": 200,
                    "min": 0,
                    "unit": "GBP",
                    "value": 34,
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "data": Object {
                    "format": "currency",
                    "max": 200,
                    "min": 0,
                    "unit": "GBP",
                    "value": 34,
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "arc": [Function],
        "context": Object {},
        "copyError": Selection {
          "_groups": Array [
            Array [
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "copyMax": Selection {
          "_groups": Array [
            Array [
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "copyMin": Selection {
          "_groups": Array [
            Array [
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "copyValue": Selection {
          "_groups": Array [
            Array [
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "onUpdateTransition": [Function],
        "percentageArc": Selection {
          "_groups": Array [
            Array [
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "props": Object {
          "data": Object {
            "format": "currency",
            "max": 200,
            "min": 0,
            "unit": "GBP",
            "value": 34,
          },
        },
        "refs": Object {},
        "state": null,
        "svg": Selection {
          "_groups": Array [
            Array [
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>,
            ],
          ],
          "_parents": Array [
            null,
          ],
        },
        "svgD": Object {
          "current": <svg
            class="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          >
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>
          </svg>,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
        "valueOld": 0,
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "data": Object {
          "format": "currency",
          "max": 200,
          "min": 0,
          "unit": "GBP",
          "value": 34,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="gauge"
        >
          <svg
            class="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          >
            <g
              transform="translate(100,80)"
            >
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="-80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="8px"
                style="fill: black; opacity: 1;"
                x="80"
                y="10"
              />
              <text
                font-family="sans-serif"
                font-size="11px"
                style="fill: black; opacity: 1;"
                x="0"
                y="-5"
              />
              <text
                font-family="sans-serif"
                font-size="6px"
                style="fill: black; opacity: 1;"
                x="0"
                y="15"
              />
              <path
                d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ddd;"
              />
              <path
                d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                style="fill: #ff0099;"
              />
            </g>
          </svg>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <svg
            className="svg-container"
            preserveAspectRatio="xMidYMid"
            viewBox="0 0 200 100"
          />,
          "className": "gauge",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <svg
              class="svg-container"
              preserveAspectRatio="xMidYMid"
              viewBox="0 0 200 100"
            >
              <g
                transform="translate(100,80)"
              >
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="-80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="8px"
                  style="fill: black; opacity: 1;"
                  x="80"
                  y="10"
                />
                <text
                  font-family="sans-serif"
                  font-size="11px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="-5"
                />
                <text
                  font-family="sans-serif"
                  font-size="6px"
                  style="fill: black; opacity: 1;"
                  x="0"
                  y="15"
                />
                <path
                  d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ddd;"
                />
                <path
                  d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                  style="fill: #ff0099;"
                />
              </g>
            </svg>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "svg-container",
              "preserveAspectRatio": "xMidYMid",
              "viewBox": "0 0 200 100",
            },
            "ref": Object {
              "current": <svg
                class="svg-container"
                preserveAspectRatio="xMidYMid"
                viewBox="0 0 200 100"
              >
                <g
                  transform="translate(100,80)"
                >
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="-80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="8px"
                    style="fill: black; opacity: 1;"
                    x="80"
                    y="10"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="11px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="-5"
                  />
                  <text
                    font-family="sans-serif"
                    font-size="6px"
                    style="fill: black; opacity: 1;"
                    x="0"
                    y="15"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15A80,80,0,1,1,80,0L41.904761904761905,0A41.904761904761905,41.904761904761905,0,1,0,-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ddd;"
                  />
                  <path
                    d="M-80,-9.797174393178826e-15L-41.904761904761905,-5.131853253569861e-15Z"
                    style="fill: #ff0099;"
                  />
                </g>
              </svg>,
            },
            "rendered": Array [
              undefined,
            ],
            "type": "svg",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
